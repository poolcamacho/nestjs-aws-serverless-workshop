service: aws-serverless-demo

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    STAGE: ${self:provider.stage}
    DYNAMODB_TABLE_NAME: Users-${self:provider.stage}
    QUEUE_NAME: notifications-queue-${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/Users-${self:provider.stage}'
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            - !GetAtt NotificationsQueue.Arn

package:
  individually: true
  patterns:
    - '!./**'
    - 'dist/**'
    - 'node_modules/**'

functions:
  api:
    handler: src/lambda.api
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true

  processNotifications:
    handler: src/lambda.processNotifications
    events:
      - sqs:
          arn: !GetAtt NotificationsQueue.Arn
          batchSize: 1

custom:
  typescript:
    enableDevelopmentMode: false
    disableSourcemapDetection: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    NotificationsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: notifications-queue-${self:provider.stage}
        VisibilityTimeout: 30
        MessageRetentionPeriod: 345600
